<?php

namespace Crm\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * InvoiceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvoiceRepository extends EntityRepository
{
    /**
     * Get list of invoices filtered and paginated.
     *
     * @param array $filters Filters for the query.
     * @param int $page Current page.
     * @param int $page_size Number of items per page.
     * @return Paginator
     */
    public function getInvoicesList($filters, $page=1, $page_size = 10) {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $qb->add('select', 'i')
            ->from('CrmAppBundle:Invoice', 'i')
            ->where('1=1');

        if (!empty($filters['date'])) {
            $qb->andWhere('i.createdAt LIKE :date')
                ->setParameter('date', '%'.$filters['date'].'%');
        }

        $qb->setFirstResult( $page_size * ( $page - 1 ) )
            ->setMaxResults( $page_size );

        return new Paginator($qb->getQuery());
    }

    /**
     * Return the next reference number.
     *
     * @return string
     */
    public function getNextReferenceNumber()
    {
        $reference_slug = date('Y');

        $dql = <<<DQL
SELECT
    i.reference
FROM
    CrmAppBundle:Invoice i
WHERE
    i.reference LIKE :reference_slug
ORDER BY
    i.reference DESC
DQL;

        $result = $this->getEntityManager()
            ->createQuery($dql)
            ->setMaxResults(1)
            ->setParameter('reference_slug', $reference_slug.'%')
            ->getOneOrNullResult();

        if (empty($result['reference'])) {
            return $reference_slug.'001';
        }else{
            $number = str_replace($reference_slug, '', $result['reference']);
            $number++;
            $number = str_pad($number, 3, '0', STR_PAD_LEFT);

            return $reference_slug.$number;
        }
    }
}
